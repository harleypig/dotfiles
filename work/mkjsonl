#!/usr/bin/env python

import sys
import argparse

import jsonlines
import yaml

#-----------------------------------------------------------------------------
def load_yaml(filename):
    """
    Load a YAML file and return the data.

    Args:
        filename (str): The path to the YAML file to be loaded.

    Returns:
        list/dict: The data loaded from the YAML file, or False if an error occurred.

    This function attempts to open and read the specified YAML file using the yaml
    library. If the file is successfully read and parsed, the data is returned.
    If there is an error (e.g., file not found, parse error), the error is printed
    to stderr, and the function returns False.
    """

    try:
        with open(filename, 'r') as yf:
            data = yaml.load(yf, Loader=yaml.FullLoader)

    except Exception as e:
        print(f"Error loading {filename}: {e}", file=sys.stderr)
        return False

    return data

#-----------------------------------------------------------------------------
def save_jsonl(filename, data=[]):
    try:
        with jsonlines.open(filename, mode='w') as jf:
            jf.write_all(data)

    except Exception as e:
        print(f"Error saving to {filename}: {e}", file=sys.stderr)
        sys.exit(1)

#-----------------------------------------------------------------------------
def convert(yaml_files, jsonl_file):
    objs = []

    for yaml_file in yaml_files:
        raw = load_yaml(yaml_file) 
        if not raw:
            continue

        for el in raw:
            for key, value in el.items():
                objs.append({"input_text":f"{key}", "output_text": f"{value}"})

    save_jsonl(jsonl_file, objs)

#-----------------------------------------------------------------------------
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Convert YAML to JSONL')

    parser.add_argument('yaml_files', type=str,
                        nargs='+',
                        help='The YAML file(s) to convert')

    parser.add_argument('-o', '--output', type = str,
                        dest='jsonl_file',
                        required=True,
                        help='The JSONL file to output')

    args = parser.parse_args()

    convert(args.yaml_files, args.jsonl_file)
