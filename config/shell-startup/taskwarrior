#!/bin/bash

return 0

# Functions and aliases specific to the taskwarrior program.
# http://taskwarrior.com

# XXX: Add check for if we are being sourced and die if not
# XXX: Add version check
# XXX: Look at /usr/share/doc/task/scripts/ for ideas

[[ $- == *i* ]] || return 0

[[ -x "$(command -v task 2> /dev/null)" ]] || return 0

export TASKDATA="${XDG_DATA_HOME}/task"
export TASKRC="${XDG_CONFIG_HOME}/task/taskrc"

task_completion="$HOME/.task/completion/task-completion.sh"
# shellcheck disable=SC1090
[[ -f $task_completion ]] && source "$task_completion"

__task() {
  #perl -MTaskwarrior::Kusarigama -e '' &> /dev/null && PERL5LIB="$PERL5LIB:$HOME/.task/lib"
  task "$@"

  #if task _show | grep -q taskd.server; then
  #  # shellcheck disable=SC1117
  #  if task commands | grep -Eq "$1|$2\s.*RW"; then
  #    task sync
  #  fi
  #fi

}

# ???: What am I doing here?
task=__task

taskdatadir=$($task _get rc.data.location)
taskdatadir=${taskdatadir//\~/"$HOME"}

_task_command() {
  local command=$1
  local tid=$2
  shift
  shift
  $task "$tid" "$command" "$@"
}

declare -A TASK_COMMANDS
TASK_COMMANDS=(
  [tanno]='annotate'
  [td]='done'
  [te]='edit'
  [ti]='info'
  [tm]='mod'
  [tstart]='start'
  [tstop]='stop'
)

for func in "${!TASK_COMMANDS[@]}"; do
  eval "$func () { _task_command ${TASK_COMMANDS[$func]} \"\$@\" ; }"
done

_task_report_or_add() {
  project=$1
  shift

  if [ "$#" -eq 0 ]; then
    report=${project##*.}
    $task "$report"
  else
    [ "$project" == 'backlog' ] && project="${project} wait:someday"
    $task add "project:$project" "$@"
  fi
}

_task_completed_but_not_done() {
  local tag=$1
  local tid=$2
  shift
  shift

  if [ "$#" -eq 0 ]; then
    echo "You must explain why this task wasn't done."
    return
  else
    $task "$tid" annotate "$@"
    $task "$tid" 'done' "$tag"
  fi
}

tskip() { _task_completed_but_not_done +skip "$@"; }
tfail() { _task_completed_but_not_done +fail "$@"; }

task_last_id() {
  local last_id
  last_id=$($task newest rc.verbose=nothing limit:1)
  last_id=${last_id# *}
  last_id=${last_id%% *}
  echo "$last_id"
}

task_last_uuid() {
  local last_id
  local last_uuid

  last_id=$(task_last_id)
  last_uuid=$($task "$last_id" _uuids)

  echo "$last_uuid"
}

# shellcheck disable=SC2139
{
  alias ct="clear;$task"
  alias t="$task"
  alias tadd="$task add"
  alias tall="$task all -COMPLETED -DELETED"
  alias tcon="$task context"
  alias trecur="$task all status:recurring"
  #alias ts="$task sync"
}

shortcutsfile="${taskdatadir}/make_shortcuts"

if [ -f "$shortcutsfile" ]; then
  while read -r line; do
    name=${line%% *}
    parms=${line#* }
    eval "$name () { $parms \"\$@\" ; }"
  done < <(cat "$shortcutsfile")
fi
