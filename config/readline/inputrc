# http://www.reddit.com/r/commandline/comments/kbeoe/you_can_make_readline_and_bash_much_more_user/
# https://wiki.archlinux.org/index.php/Readline

$include /etc/inputrc

# Mode Settings

set editing-mode vi
set show-mode-in-prompt on
set vi-ins-mode-string "\001\033[32m\002|INS|\001\033[0m\002 "
set vi-cmd-mode-string "\001\033[41m\033[93m\002<CMD>\001\033[0m\002 "

# Completion Settings

set colored-completion-prefix on
set colored-stats on
set completion-ignore-case on
set completion-map-case on
set completion-prefix-display-length 2
set mark-symlinked-directories on
set show-all-if-ambiguous on
set show-all-if-unmodified on
set skip-completed-text on
set visible-stats on

# Other Settings

set bell-style visible
set blink-matching-paren on
set expand-tilde on
set history-preserve-point on
set input-meta on
set output-meta on

# Macros

# Ctrl + I Show possible completions
# not needed, Ctl-n has this by default
#"\C-i": menu-complete

# Same as bash 'clear' command
"\C-l": clear-screen

# Append pipe-less to the command and execute
"\C-xl": "\C-e |& less\C-m"

# clear-display is listed in bind -p output, but nothing in manual, beyond
# a listing of functions. This site
# (https://tiswww.case.edu/php/chet/readline/readline.html) says the
# following:
#
# Clear the screen and, if possible, the terminal's scrollback buffer, then
# redraw the current line, leaving the current line at the top of the screen.

# Mimic Zsh run-help
# https://wiki.archlinux.org/title/Bash#Mimic_Zsh_run-help_ability
# See config/shell-startup/general for run-help function
"\C-xh": run-help

$if mode=vi
    set keymap vi-command
    # Bind up and down arrow keys and j/k keys for history search
    "\e[A": history-search-backward
    "\e[B": history-search-forward
    "k": history-search-backward
    "j": history-search-forward

    set keymap vi-insert
    # Bind up and down arrow keys for history search
    "\e[A": history-search-backward
    "\e[B": history-search-forward
$endif

# bind -v Display readline variable names and values in such a way that they
#         can be re-read.
#
# These might be interesting

# set convert-meta off
# set disable-completion off
# set mark-modified-lines off
# set menu-complete-display-prefix off

#"\C-n": dump-macros

# -s     Display readline key sequences bound to macros and the strings they output in such  a  way  that
#        they can be re-read.
# -S     Display readline key sequences bound to macros and the strings they output.
# -q function Query about which keys invoke the named function.

# bind -p: Display readline function names and bindings in such a way that
#          they can be re-read.
#
# self-insert lines have been removed
# functions bound in this file have been removed
# default bound functions have been removed
#
# Might be interesting:
#
# "\C-t": transpose-chars (default)
# transpose-words (not bound)
# shell-transpose-words (not bound)
#
# alias-expand-line (not bound)
# tilde-expand (not bound)
# character-search (not bound)
# character-search-backward (not bound)
# complete (not bound)
# complete-command (not bound)
# complete-filename (not bound)
# complete-hostname (not bound)
# complete-into-braces (not bound)
# complete-username (not bound)
# complete-variable (not bound)
# display-shell-version (not bound)
# do-lowercase-version (not bound)
# glob-complete-word (not bound)
# glob-expand-word (not bound)
# glob-list-expansions (not bound)
# history-and-alias-expand-line (not bound)
# history-expand-line (not bound)
# history-substring-search-backward (not bound)
# history-substring-search-forward (not bound)
# insert-comment (not bound)
# insert-completions (not bound)
# magic-space (not bound)
# possible-command-completions (not bound)
# possible-completions (not bound)
# possible-filename-completions (not bound)
# possible-hostname-completions (not bound)
# possible-username-completions (not bound)
# possible-variable-completions (not bound)
# tilde-expand (not bound)
# tty-status (not bound)
