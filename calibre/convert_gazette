#!/usr/bin/env python

import subprocess
import re
import sys

##############################################################################
#-----------------------------------------------------------------------------
def get_book_list():
    try:
        result = subprocess.run(["calibredb", "list"], stdout=subprocess.PIPE, text=True, check=True)
        return result.stdout.strip().split("\n")[1:]  # Skip the header row

    except subprocess.CalledProcessError as e:
        print(f"Error occurred while running calibredb list: {e}")
        sys.exit(1)

#-----------------------------------------------------------------------------
def arabic_to_roman(num):
    roman_numerals = {
        1: "I", 4: "IV", 5: "V", 9: "IX", 10: "X",
        40: "XL", 50: "L", 90: "XC", 100: "C",
        400: "CD", 500: "D", 900: "CM", 1000: "M"
    }

    roman = ""

    for value, numeral in sorted(roman_numerals.items(), key=lambda x: -x[0]):
        while num >= value:
            roman += numeral
            num -= value

    return roman

#-----------------------------------------------------------------------------
def process_line(line):
    match = re.match(r"(\d+)\s+(Grantville Gazette,? Volume (\d+))", line)

    if match:
        book_id = match.group(1)
        title = match.group(2)
        volume_num = int(match.group(3))

        # Convert to Roman numeral
        roman_num = arabic_to_roman(volume_num)
        new_title = f"Grantville Gazette, Volume {roman_num}"
        return book_id, title, new_title

    return None, None, None

##############################################################################
lines = get_book_list()

for line in lines:
    book_id, title, new_title = process_line(line)

    if book_id and title and new_title:
        # Update metadata using calibredb
        try:
            subprocess.run([
                "calibredb", "set_metadata", book_id,
                "--field", f"title:{new_title}",
                "--field", f"sort:{new_title}"
            ], check=True)

            print(f"Updated book ID {book_id}: {title} -> {new_title}")

        except subprocess.CalledProcessError as e:
            print(f"Error occurred while updating metadata for book ID {book_id}: {e}")
