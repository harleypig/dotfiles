#!/bin/bash

# Functions and aliases specific to the taskwarrior program.
# http://taskwarrior.com

task=$(command -v task)

if [ "$task" != '' ]; then

  taskdatadir=$($task _get rc.data.location)
  taskdatadir=${taskdatadir//\~/"$HOME"}

  function _task_command {

    command=$1 ; tid=$2
    shift      ; shift
    $task $tid $command $*

  }

  function tanno  { _task_command annotate $* ; }
  function td     { _task_command done     $* ; }
  function te     { _task_command edit     $* ; }
  function ti     { _task_command info     $* ; }
  function tm     { _task_command mod      $* ; }
  function tstart { _task_command start    $* ; }
  function tstop  { _task_command stop     $* ; }

  function _task_report_or_add {

    project=$1
    shift

    if [ "$#" -eq 0 ]; then
      report=${project##*.}
      $task $report
    else
      [ "$project" == 'incubate' ] && project="${project} wait:someday"
      $task add project:$project $*
    fi
  }

  function _task_completed_but_not_done {

    tag=$1 ; tid=$2
    shift  ; shift

    if [ "$#" -eq 0 ]; then
      echo "You must explain why this task wasn't done."
      return
    else
      $task $tid annotate $*
      $task $tid done $tag
    fi
  }

  shortcutsfile="${taskdatadir}/make_shortcuts"

  if [ -f $shortcutsfile ]; then
    while read -r line ; do
      name=${line%% *}
      parms=${line#* }
      eval "function $name { $parms \$* ; }"
    done < <(cat $shortcutsfile)
  fi

  function tskip { _task_completed_but_not_done +skip $* ; }
  function tfail { _task_completed_but_not_done +fail $* ; }

  alias context="$task context"
  alias tall="$task all -COMPLETED -DELETED"
  alias ta="$task add"
  alias ts="$task sync"
  alias t="$task"

fi
