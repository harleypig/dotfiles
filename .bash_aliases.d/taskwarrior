#!/bin/bash

# Functions and aliases specific to the taskwarrior program.
# http://taskwarrior.com

task=$(command -v task)

if [ "$task" != '' ]; then

  function te     { $task $* edit  ; }
  function ti     { $task $* info  ; }
  function tstart { $task $* start ; }
  function tstop  { $task $* stop  ; }

  function _task_command {

    command=$1 ; tid=$2
    shift      ; shift
    $task $tid $command $*

  }

  function tanno { _task_command annotate $* ; }
  function tm    { _task_command mod      $* ; }
  function td    { _task_command done     $* ; }

  function _task_report_or_add {

    project=$1
    shift

    if [ "$#" -eq 0 ]; then
      report=${project##*.}
      $task $report
    else
      [ "$project" == 'incubate' ] && project="${project} wait:someday"
      $task add project:$project $*
    fi
  }

  for c in alan deedee carrie james robert patrick; do
    eval "function $c { _task_report_or_add family.$c \$* ; }"
  done

  for p in auto finance game health school spiritual; do
    eval "function $p { _task_report_or_add personal.$p \$* ; }"
  done

  for p in incubate work; do
    eval "function $p { _task_report_or_add $p \$* ; }"
  done

  function _task_completed_but_not_done {

    tag=$1 ; tid=$2
    shift  ; shift

    if [ "$#" -eq 0 ]; then
      echo "You must explain why this task wasn't done."
      return
    else
      $task $tid annotate $*
      $task $tid done $tag
    fi
  }

  function tskip { _task_completed_but_not_done +skip $* ; }
  function tfail { _task_completed_but_not_done +fail $* ; }

  alias context="$task context"
  alias tall="$task all -COMPLETED -DELETED"
  alias ta="$task add"
  alias ts="$task sync"
  alias t="$task"

fi
