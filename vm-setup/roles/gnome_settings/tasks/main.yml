---
-  command: gsettings set org.gnome.shell.extensions.ding show-trash {{ show_trash | lower }}

- name: Hide home icon
  command: gsettings set org.gnome.shell.extensions.ding show-home {{ show_home | lower }}

- name: Set titlebar font
  command: gsettings set org.gnome.desktop.wm.preferences titlebar-uses-system-font {{ titlebar_uses_system_font | lower }}

- name: Set screensaver idle activation
  command: gsettings set org.gnome.desktop.screensaver idle-activation-enabled {{ screensaver_idle_activation_enabled | lower }}

- name: Set lock screen
  command: gsettings set org.gnome.desktop.screensaver lock-enabled {{ lock_screen_enabled | lower }}

- name: Set lock screen (lockdown)
  command: gsettings set org.gnome.desktop.lockdown disable-lock-screen {{ lock_screen_disable_lock_screen | lower }}

- name: Set desktop background options
  shell: "gsettings set org.gnome.desktop.background {{ item }}"
  with_items: "{{ desktop_background }}"

- name: Set desktop interface options
  shell: "gsettings set org.gnome.desktop.interface {{ item }}"
  with_items: "{{ desktop_interface }}"

- name: Set dash-to-dock settings
  shell: "gsettings set org.gnome.shell.extensions.dash-to-dock {{ item }}"
  with_items: "{{ dock }}"

-  systemd:
    name: "{{ item }}"
    enabled: no
    masked: yes
    state: stopped
  loop: "{{ disabled_services }}"

 - name: Install and enable GNOME Shell extensions
   block:
     - name: Install GNOME Shell extension
       command: gnome-shell-extension-installer {{ item }} --yes
       register: extension_install
       changed_when: "'Extension installed' in extension_install.stdout"
       failed_when: extension_install.rc != 0 and 'already installed' not in extension_install.stderr
       loop: "{{ gnome_shell_extension_uuids }}"
       loop_control:
         loop_var: uuid

     - name: Enable GNOME Shell extension
       command: gnome-extensions enable {{ uuid }}
       when: extension_install is changed
   loop: "{{ gnome_shell_extension_uuids }}"
   loop_control:
     loop_var: uuid

   ########

   - command: gnome-shell-extension-installer {{ gnome_shell_extension_list_uuid }} --yes
     register: extension_install
     changed_when: "'Extension installed' in extension_install.stdout"
     failed_when: extension_install.rc != 0 and 'already installed' not in extension_install.stderr
     vars:
       gnome_shell_extension_list_uuid: "extension-list@gnome-shell-extensions.gcampax.github.com"

   - name: Enable GNOME Shell extension list
     command: gnome-extensions enable {{ gnome_shell_extension_list_uuid }}
     when: extension_install is changed

   ########

- include_tasks: tilix.yml
