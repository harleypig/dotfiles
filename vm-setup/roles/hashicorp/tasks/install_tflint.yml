---
- name: Check if version tracking fact is initialized
  fail:
    msg: "Version tracking fact has not been initialized."
  when: version_tracking is not defined or version_tracking == {}

- name: Set current version
  set_fact:
    hashicorp_asset_current_version: "{{ version_tracking['tflint'] | default('0') }}"

- name: Dump version information
  debug:
    msg: "Current version of tflint: {{ hashicorp_asset_current_version }}"
  when: DEBUG_PLAYBOOK | default(false) | bool

- name: Create a temporary file
  tempfile:
    state: file
    suffix: .zip
  register: hashicorp_tempfile

- name: Dump tempfile information
  debug:
    msg: "Tempfile: {{ hashicorp_tempfile }}"
  when: DEBUG_PLAYBOOK | default(false) | bool

- name: Get the new release if there is one
  include_role:
    name: github_release
  vars:
    github_release_asset_name: tflint
    github_release_asset_pattern: tflint_linux_amd64.zip
    github_release_current_version: "{{ hashicorp_asset_current_version }}"
    github_release_repo: terraform-linters/tflint
    github_release_localpath: "{{ hashicorp_tempfile.path }}"

- name: Dump version information using the github_asset_name variable
  debug:
    msg: |
      Mismatch: {{ github_release_version_mismatch }}
      Download result: {{ github_release_download_result }}
  when: DEBUG_PLAYBOOK | default(false) | bool

- name: Unzip the testfile
  become: yes # noqa: yaml[truthy]
  unarchive:
    src: "{{ hashicorp_tempfile.path }}"
    dest: /usr/local/bin/
    include: tflint
    remote_src: yes # noqa: yaml[truthy]
    mode: '0755'
  register: unarchive_result
  when: github_release_version_mismatch

- name: Set version tracking fact for tflint
  include_role:
    name: version_tracking
  vars:
    version_tracking_key: 'tflint'
    version_tracking_value: "{{ github_release_latest_version }}"
    version_tracking_action: 'update'
  when: unarchive_result is succeeded
