# Found at http://wiki.archlinux.org/index.php/Color_Bash_Prompt
# Also see http://www.termsys.demon.co.uk/vtansi.htm

# Get some ideas from:
#   https://gist.github.com/621452
#   https://gist.github.com/623142
#   http://blog.woobling.org/2010/10/ritalin-for-your-ps1.html
#   http://git.kernel.org/?p=git/git.git;a=blob;f=contrib/completion/git-completion.bash;hb=HEAD
#   https://github.com/lvv/git-prompt

# Regular

text_black="\e[0;30m"
text_blue="\e[0;34m"
text_cyan="\e[0;36m"
text_green="\e[0;32m"
text_purple="\e[0;35m"
text_red="\e[0;31m"
text_white="\e[0;37m"
text_yellow="\e[0;33m"

# Background

background_black="\e[40m"
background_blue="\e[44m"
background_cyan="\e[46m"
background_green="\e[42m"
background_purple="\e[45m"
background_red="\e[41m"
background_white="\e[47m"
background_yellow="\e[43m"

# Bold

bold_black="\e[1;30m"
bold_blue="\e[1;34m"
bold_cyan="\e[1;36m"
bold_green="\e[1;32m"
bold_purple="\e[1;35m"
bold_red="\e[1;31m"
bold_white="\e[1;37m"
bold_yellow="\e[1;33m"

# Underline

underline_black="\e[4;30m"
underline_blue="\e[4;34m"
underline_cyan="\e[4;36m"
underline_green="\e[4;32m"
underline_purple="\e[4;35m"
underline_red="\e[4;31m"
underline_white="\e[4;37m"
underline_yellow="\e[4;33m"

# Reset

text_reset="\e[0m"

# Cursor

# Cursor set \[\033[<row>;<column>]f\]
cursor_setbegin="\[\033["
cursor_setend="f\]"

cursor_save="\[\033[s\]"
cursor_restore="\[\033[u\]"

# Erase Text
erase_eol="\[\033[K\]"
erase_sol="\[\033[1K\]"
erase_line="\[\033[2K\]"
erase_down="\[\033[J\]" # Erase from cursor to bottom of screen
erase_up="\[\033[1J\]"  # Erase from cursor to top of screen
erase_screen="\[\033[2J\]"

# Bash allows these prompt strings to be customized by inserting a
# number of backslash-escaped special characters that are
# decoded as follows:
#
#  \a         an ASCII bell character (07)
#  \d         the date in "Weekday Month Date" format (e.g., "Tue May 26")
#  \D{format} the format is passed to strftime(3) and the result
#             is inserted into the prompt string an empty format
#             results in a locale-specific time representation.
#             The braces are required
#  \e         an ASCII escape character (033)
#  \h         the hostname up to the first `.'
#  \H         the hostname
#  \j         the number of jobs currently managed by the shell
#  \l         the basename of the shell's terminal device name
#  \n         newline
#  \r         carriage return
#  \s         the name of the shell, the basename of $0 (the portion following
#             the final slash)
#  \t         the current time in 24-hour HH:MM:SS format
#  \T         the current time in 12-hour HH:MM:SS format
#  \@         the current time in 12-hour am/pm format
#  \A         the current time in 24-hour HH:MM format
#  \u         the username of the current user
#  \v         the version of bash (e.g., 2.00)
#  \V         the release of bash, version + patch level (e.g., 2.00.0)
#  \w         the current working directory, with $HOME abbreviated with a tilde
#  \W         the basename of the current working directory, with $HOME
#             abbreviated with a tilde
#  \!         the history number of this command
#  \#         the command number of this command
#  \$         if the effective UID is 0, a #, otherwise a $
#  \nnn       the character corresponding to the octal number nnn
#  \\         a backslash
#  \[         begin a sequence of non-printing characters, which could be used
#             to embed a terminal control sequence into the prompt
#  \]         end a sequence of non-printing characters
#
#  The command number and the history number are usually different:
#  the history number of a command is its position in the history
#  list, which may include commands restored from the history file
#  (see HISTORY below), while the command number is the position in
#  the sequence of commands executed during the current shell session.
#  After the string is decoded, it is expanded via parameter
#  expansion, command substitution, arithmetic expansion, and quote
#  removal, subject to the value of the promptvars shell option (see
#  the description of the shopt command under SHELL BUILTIN COMMANDS
#  below).

#TODO:
#revision control info, like vcscommand status line tool
#exitstatus="$(let exitstatus=\$? ; if [[ \${exitstatus} != 0 ]]; then echo '${text_red}Exit Status: \${exitstatus}]' ; fi)"
#uptime='Up $(echo \"scale=2;$(cat /proc/uptime | cut -d \' \' -f 1) / (60 * 60 * 24)\" | bc) days'
#loadavg='cat /proc/loadavg'
#du='du -hs $PWD'
#fortune="\$(fortune -as)"

# Spaces (anything else?) in the name are causing problems with this.
cwd="\$(if [ -w \${PWD} ]; then echo '${text_green}'; else echo '${text_red}'; fi)\${PWD}${text_reset}"
datetime="\D{%a %b %d %Y %T %n DoW: %w DoY: %j Wk: %V Epoch: %s}"
freespace="\$(df -hP . | grep -v 'Avail' | tr -s ' ' | cut -d ' ' -f 4) available"
restore="${text_reset}${cursor_restore}"

[[ ! -z ${MYVIMRC} ]] && vim="${text_red} (VIm)${text_reset}"

#top="${cursor_save}${cursor_setbegin}0;0${cursor_setend}${text_cyan}"
top="${text_blue}"

PS1="\$(history -a)${erase_eol}"
PS1="${PS1}\n${vim} ${text_blue}${datetime}${erase_eol}"
#PS1="${PS1}\n \${uptime}${erase_eol}"
PS1="${PS1}\n \u@\H: ${cwd}${erase_eol}"
PS1="${PS1}\n ${freespace}${erase_eol}"
#PS1="${PS1}\n ${exitstatus}${erase_eol}"
#PS1="${PS1}\n ${fortune}${erase_eol}"
#PS1="${PS1}\n ${erase_eol}${restore}${erase_eol}$ "
PS1="${PS1}\n $ ${erase_eol}"
