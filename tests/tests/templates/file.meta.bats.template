#!/usr/bin/env bats

# !!! DO NOT EDIT THIS FILE !!!

# Changes to this file will be erased when the setup script is run again.

# If you have a change that applies universally then change the template and
# re-run the setup script. Otherwise, create a new test file with a different
# name.

# !!! DO NOT EDIT THIS FILE !!!

# Meta tests for ^FILENAME^. Basically, tests that don't actually execute the
# script.

load "$BATS_TEST/global.bash"

#############################################################
# Basic Tests for ^FILENAME^

@test '^FILENAME^ exists' {
  assert_file_exist "^FQFN^"
}

#------------------------------------------------------------
@test '^FILENAME^ is in PATH' {
  ^SKIP_IF_NOT_EXEC^
  run which ^FILENAME^
  assert_success
  assert_output "^FQFN^"
}

#------------------------------------------------------------
@test '^FILENAME^ has expected perms (^PERMS^)' {
  run stat --printf '%A' "^FQFN^"
  assert_success
  assert_output '^PERMS^'
}

#------------------------------------------------------------
@test '^FILENAME^ has a man page' {
  skip 'documentation not currently required'
  grep -q '^##\s\+NO\s\+MANPAGE$' ^FQFN^ && skip 'No man page required'
  run man -w ^FILENAME^
  assert_success
  assert_output '^FILEMAN^'
}

#------------------------------------------------------------
# The settings for shellcheck need to match what is in the vim settings for
# shellcheck, found in dotfiles/.vim/bundle/local/after/plugin/shellcheck.vim
#
# Currently:
#
# let g:syntastic_sh_shellcheck_args = '--external-sources --color=never --exclude=SC1090,SC1091'

@test '^FILENAME^ shellcheck passes' {
  local -a switches

  switches+=('--external-sources')
  switches+=('--color=never')
  switches+=('--exclude=SC1090,SC1091')

  # We are only interested in success/fail here.
  run shellcheck "${switches[@]}" "^FQFN^" &> /dev/null
  assert_success
  assert_output ''
}

#------------------------------------------------------------
# The settings for shfmt need to match what is in the vim settings for shfmt,
# found in dotfiles/.vim/bundle/local/after/plugin/shfmt.vim
#
# Currently:
#
# let s:switches = join(['-w', '-s', '-i', '2', '-bn', '-ci', '-sr'])
#
# Except, we don't want to overwrite the existing file (no -w) and we want to
# know if shfmt would make any changes (add -d).

@test '^FILENAME^ shfmt passes' {
  local -a switches

  switches+=('-d')
  switches+=('-s')
  switches+=('-i' '2')
  switches+=('-bn')
  switches+=('-ci')
  switches+=('-sr')

  # We are only interested in success/fail here.
  run shfmt "${switches[@]}" "^FQFN^" &> /dev/null
  assert_success
  assert_output ''
}
