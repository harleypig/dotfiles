#!/bin/bash

#----------------------------------------------------------------------------
function warn() { printf '%s\n' "$*" >&2; }

function die() {
  (($#)) && warn "$*"
  exit 1
}

# shellcheck disable=SC2120
function yesno() {
  local -u yn

  while true; do
    # shellcheck disable=SC2162
    read -N1 -p "${1:-Yes or no?} " yn

    case $yn in
      Y | N)
        printf '%s' "$yn"
        return
        ;;
      Q)
        warn 'Exiting...'
        exit 1
        ;;
      *)
        warn 'Please enter a Y or a N'
        ;;
    esac
  done
}

#----------------------------------------------------------------------------
[[ $# -ne 1 ]] && {
  echo "$(basename $0) expects the name of a submodule to remove."
  exit 1
}

if ! git rev-parse --is-inside-work-tree &> /dev/null; then
  echo "$(basename $0) expects to be in a repository."
  exit 1
fi

cd $(git rev-parse --show-toplevel) || {
  echo "Unable to change to top level of repository."
  exit 1
}

#----------------------------------------------------------------------------
sm_name="$1"

readarray -t submodules < <(git config --file .gitmodules --get-regexp "$sm_name" | grep '\.path' | cut -d ' ' -f 2-)

[[ "${#submodules[@]}" -eq 0 ]] && {
  echo "Did not find a submodule that matches '$sm_name'."
  exit 1
}

[[ "${#submodules[@]}" -gt 1 ]] && {
  echo "Found multiple matches for '$sm_name'. Be more specific."

  for s in "${submodules[@]}"; do
    printf '\t%s\n' $s
  done

  exit 1
}

fq_sm_name="${submodules[0]}"

#----------------------------------------------------------------------------
cont="$(yesno "Found ${fq_sm_name}. Remove this submodule? (Y/N) ")"
echo

[[ $cont == 'N' ]] && die "Aborting removal of submodule $sm_name"

#----------------------------------------------------------------------------
git rm "$fq_sm_name" || \
  die "Error removing $sm_name from repository, not doing anything else."

incomplete="
Removal incomplete, your repository is in an unknown state.
"

git config -f .git/config --remove-section submodule."$fq_sm_name" || \
  die "Error removing $sm_name from .git/config.$incomplete"

rm -fr ".git/modules/$fq_sm_name" || \
  die "Error removing module from .git directory.$incomplete"

[[ -d ".git/modules/$fq_sm_name" ]] && \
  die "Error removing module from .git directory.$incomplete"

git commit -m "removed submodule $sm_name" || \
  die "Error committing changes.$incomplete"

echo "Removed submodule ${sm_name}."
