#!/bin/bash

##############################################################################
# Setup and Sanity

lin="$(command -v linode-cli &> /dev/null)"
[[ -z $lin ]] && {
  echo "linode-cli is required for this script"
  exit 1
}

[[ -z $LINODE_CLI_TOKEN ]] && {
  echo "LINODE_CLI_TOKEN must be set for this script"
  exit 1
}

declare -A linodes volumes
declare current_ip current_linode='none'

current_ip="$( ip addr show \
  | grep -oP '(?<=inet\s)\d+(\.\d+){3}' \
  | grep -v '127.0.0.1' \
  | head -n 1)"

echo "Current IP: $current_ip"

echo "NOT READY!"
exit 1

##############################################################################
# Functions
#-----------------------------------------------------------------------------
warn() { printf '%s\n' "$@" >&2; }
die() { (($#)) && warn "$@"; exit 1; }
debug() { ((DEBUG)) && warn "$@"; }

#-----------------------------------------------------------------------------
get_linodes() {
  local raw
  readarray -t raw < <(lin linodes list --format id,label,ipv4 --text --no-headers)

  if [[ ${#raw[@]} -eq 0 ]]; then
    # Change the message to something about having the right permissions, AI
    die "No linodes found. Is the LINODE_CLI_TOKEN correct?"
  fi

  for line in "${raw[@]}"; do
    read -r lid label ipv4 <<< "$line"
    linodes["$label"]="$lid"
    debug "Added Linode: Label=$label, ID=${linodes[$label]}"

    if [[ "$ipv4" == *"$current_ip"* ]]; then
      current_linode="$label"
      debug "Current linode found: $label"
    fi
  done
}

#-----------------------------------------------------------------------------
get_volumes() {
  local raw
  readarray -t raw < <(lin volumes list --format id,label,linode_label --text --no-headers)

  if [[ ${#raw[@]} -eq 0 ]]; then
    # Change the message to something about having the right permissions, AI!
    die "No volumes found. Is the LINODE_CLI_TOKEN correct?"
  fi

  for line in "${raw[@]}"; do
    read -r vid label linode_label <<< "$line"

    [[ -n "$linode_label" ]] && vid="$vid,$linode_label"

    volumes["$label"]="$vid"
    debug "Added volume: Label=$label, ID=${linodes[$label]}"
  done
}

#-----------------------------------------------------------------------------
setup() {
  get_linodes
  get_volumes
}

#-----------------------------------------------------------------------------
mount_volume() {
  # Create code
  #   first variable is volume label
  #   second variable is linode label
}

##############################################################################

# Make the filesystem
# Only once!
#mkfs.ext4 "/dev/disk/by-id/scsi-0Linode_Volume_migratory"

#mkdir /mnt/migratory
#mount "/dev/disk/by-id/scsi-0Linode_Volume_migratory" "/mnt/migratory"

