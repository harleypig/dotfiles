#!/bin/bash

PRJDIR='/c/Users/***REMOVED***/projects'

COMMON="$PRJDIR/commoncode"
CAPTURE="$PRJDIR/capture"
DOTFILES="$PRJDIR/dotfiles"
VIMFILES="$PRJDIR/dotvim"

function _update_branch() {
  DIR="$1"
  REMOTE="$2"
  BRANCH="$3"

  [[ -d $DIR ]] || {
    echo "$DIR is not a directory."
    exit 1
  }

  cd $DIR || {
    echo "Unable to change to $DIR."
    exit 1
  }

  echo "Changing to $DIR ..."

  git rev-parse --is-inside-work-tree &> /dev/null || {
    echo "$DIR is not a git repo."
    exit 1
  }

  git remote | grep -q "^$REMOTE$" || {
    echo "$REMOTE is not a recognized remote for this repository."
    exit 1
  }

  git show-ref "refs/heads/$BRANCH" &> /dev/null || {
    echo "$BRANCH is not a recognized branch for this repository."
    exit 1
  }

  echo "Checking out $BRANCH, pulling then pushing ..."

  git checkout $BRANCH && \
  git pull $REMOTE $BRANCH && \
  git push $REMOTE $BRANCH

  return 0
}

function update_internal() {
  _update_branch "$COMMON" 'origin' 'dev'
  _update_branch "$COMMON" 'origin' 'harleypig'
  _update_branch "$CAPTURE" 'origin' 'capdev'
  _update_branch "$CAPTURE" 'origin' 'captest'
}

function update_external() {
  _update_branch "$COMMON" 'harleypig' 'dev'
  _update_branch "$COMMON" 'harleypig' 'harleypig'
  _update_branch "$CAPTURE" 'harleypig' 'capdev'
  _update_branch "$CAPTURE" 'harleypig' 'captest'
  _update_branch "$DOTFILES" 'origin' 'master'
  _update_branch "$VIMFILES" 'origin' 'master'
}

case "$1" in
  harleypig) update_external ;;
  origin) update_internal ;;
  *) echo "Huh?" ;;
esac
