#!/bin/bash

# This script expects the 'user' variable to be set, which it uses to find the
# corresponding password in ~/.netrc
#
# git help credentials
# https://git-scm.com/docs/gitcredentials
#
# Git passes the following information to a credential helper:
#
# - protocol: The protocol (e.g., https or ssh).
# - host: The hostname of the server.
# - path: The path on the server.
# - username: The username for authentication.
# - password: The password for authentication.

declare protocol host path username password

# Read the input from Git
while read -r line; do
  case "$line" in
    protocol=*) protocol="${line#protocol=}" ;;
    host=*) host="${line#host=}" ;;
    path=*) path="${line#path=}" ;;
    username=*) username="${line#username=}" ;;
    password=*) password="${line#password=}" ;;
  esac
done

# Check if the host exists in .netrc and get the password
GIT_CREDENTIALS="$(awk -v host="$host" '
  $1 == "machine" && $2 == host {machine_found=1}
  machine_found && $1 == "password" {password=$2}
  END {if (machine_found && password) print password}
' ~/.netrc)"

# If not found in .netrc, check the PAT file
if [[ -z $GIT_CREDENTIALS ]]; then
  PAT_FILE="$HOME/projects/private_dotfiles/api-key.github"
  if [[ -f $PAT_FILE ]]; then
    GIT_CREDENTIALS=$(<"$PAT_FILE")
  fi
fi

# Output the password if found, otherwise let Git prompt for credentials
if [[ -n $GIT_CREDENTIALS ]]; then
  echo "password=$GIT_CREDENTIALS"
fi
