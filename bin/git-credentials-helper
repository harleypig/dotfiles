#!/bin/bash

printf '%s\n' "$@"
exit

# This script expects the 'user' variable to be set, which it uses to find the
# corresponding password in ~/.netrc
#
# git help credentials
# https://git-scm.com/docs/gitcredentials
#
# Git passes the following information to a credential helper:
#
# - protocol: The protocol (e.g., https or ssh).
# - host: The hostname of the server.
# - path: The path on the server.
# - username: The username for authentication.
# - password: The password for authentication.

# Read the input from Git
while read -r line; do
  case "$line" in
    protocol=*) protocol="${line#protocol=}" ;;
    host=*) host="${line#host=}" ;;
    path=*) path="${line#path=}" ;;
    username=*) username="${line#username=}" ;;
    password=*) password="${line#password=}" ;;
  esac
done

GIT_CREDENTIALS="$(grep -A1 "$username" ~/.netrc | grep '^password' | awk '{print $2}')"

# After printing out the input, you can still output the password if needed
[[ -n $GIT_CREDENTIALS ]] && echo "password=$GIT_CREDENTIALS"
