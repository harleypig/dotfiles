#!/bin/bash
#
# git-branch-clean - Delete local branches that no longer exist on remote
#
# Usage: git branch-clean [-n] [-h]
#
# Options:
#   -n  Dry run - show what would be deleted
#   -h  Show this help message

set -euo pipefail

# Process command line options
dry_run=0

while getopts "nh" opt; do
  case $opt in
    n) dry_run=1 ;;
    h) 
      sed -n '/^# Usage:/,/^$/ s/^# \?//p' "$0"
      exit 0
      ;;
    *) 
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

# Ensure we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
  echo "Error: not a git repository" >&2
  exit 1
fi

# Fetch and prune to ensure we have current remote information
git fetch --prune

# Find and process branches
while IFS= read -r branch; do
  if [[ -n "$branch" ]]; then
    if ((dry_run)); then
      echo "Would delete branch: $branch"
    else
      echo "Deleting branch: $branch"
      git branch -D "$branch"
    fi
  fi
done < <(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads |
         awk '$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}')
